services:
  app:
    build: .
    container_name: app
    depends_on:
      - postgres-db
      - redis-cache
    ports:
      - 8080:8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/compose-postgres
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_REDIS_HOST=redis-cache
      - SPRING_REDIS_PORT=6379
    networks:
      - music-library-network

  postgres-db:
    image: 'postgres:15'
    container_name: postgres-db
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - music-library-network

  redis-cache:
    image: 'redis:7-alpine'
    container_name: redis-cache
    command: redis-server --appendonly yes --appendfsync everysec
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - music-library-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  redis_data:

networks:
  music-library-network:
    driver: bridge



